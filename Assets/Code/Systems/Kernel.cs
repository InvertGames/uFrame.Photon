// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace DireDungeons {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    using uFrame.Kernel;
    using uFrame.ECS;
    
    
    [uFrame.Attributes.uFrameIdentifier("aaec626b-1025-4a41-9061-72c523ead5e5")]
    public partial class Kernel : uFrame.ECS.EcsSystem {
        
        private IEcsComponentManagerOf<Driver> _DriverManager;
        
        private KernelGameReadyHandler KernelGameReadyHandlerInstance = new KernelGameReadyHandler();
        
        private KernelLoadSceneEventHandler KernelLoadSceneEventHandlerInstance = new KernelLoadSceneEventHandler();
        
        private KernelUnloadSceneEventHandler KernelUnloadSceneEventHandlerInstance = new KernelUnloadSceneEventHandler();
        
        public IEcsComponentManagerOf<Driver> DriverManager {
            get {
                return _DriverManager;
            }
            set {
                _DriverManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            DriverManager = ComponentSystem.RegisterComponent<Driver>();
            this.OnEvent<uFrame.Kernel.GameReadyEvent>().Subscribe(_=>{ KernelGameReadyFilter(_); }).DisposeWith(this);
            this.OnEvent<DireDungeons.LoadSceneEvent>().Subscribe(_=>{ KernelLoadSceneEventFilter(_); }).DisposeWith(this);
            this.OnEvent<DireDungeons.UnloadSceneEvent>().Subscribe(_=>{ KernelUnloadSceneEventFilter(_); }).DisposeWith(this);
        }
        
        protected void KernelGameReadyHandler(uFrame.Kernel.GameReadyEvent data, Driver group) {
            var handler = KernelGameReadyHandlerInstance;
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void KernelGameReadyFilter(uFrame.Kernel.GameReadyEvent data) {
            var DriverItems = DriverManager.Components;
            for (var DriverIndex = 0
            ; DriverIndex < DriverItems.Count; DriverIndex++
            ) {
                this.KernelGameReadyHandler(data, DriverItems[DriverIndex]);
            }
        }
        
        protected void KernelLoadSceneEventHandler(DireDungeons.LoadSceneEvent data) {
            var handler = KernelLoadSceneEventHandlerInstance;
            handler.System = this;
            handler.Event = data;
            StartCoroutine(handler.Execute());
        }
        
        protected void KernelLoadSceneEventFilter(DireDungeons.LoadSceneEvent data) {
            this.KernelLoadSceneEventHandler(data);
        }
        
        protected void KernelUnloadSceneEventHandler(DireDungeons.UnloadSceneEvent data) {
            var handler = KernelUnloadSceneEventHandlerInstance;
            handler.System = this;
            handler.Event = data;
            StartCoroutine(handler.Execute());
        }
        
        protected void KernelUnloadSceneEventFilter(DireDungeons.UnloadSceneEvent data) {
            this.KernelUnloadSceneEventHandler(data);
        }
    }
}

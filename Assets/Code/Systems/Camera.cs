// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace DireDungeons {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using DireDungeons;
    using UnityEngine;
    using uFrame.Kernel;
    using UniRx;
    using uFrame.ECS;
    
    
    [uFrame.Attributes.uFrameIdentifier("2de1d4a5-eeb1-4a08-a06a-1449f3922205")]
    public partial class Camera : uFrame.ECS.EcsSystem, uFrame.ECS.ISystemUpdate, uFrame.ECS.ISystemLateUpdate {
        
        private IEcsComponentManagerOf<FollowUser> _FollowUserManager;
        
        private CameraUpdateHandler CameraUpdateHandlerInstance = new CameraUpdateHandler();
        
        private CameraLateUpdateHandler CameraLateUpdateHandlerInstance = new CameraLateUpdateHandler();
        
        public IEcsComponentManagerOf<FollowUser> FollowUserManager {
            get {
                return _FollowUserManager;
            }
            set {
                _FollowUserManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            FollowUserManager = ComponentSystem.RegisterComponent<FollowUser>();
        }
        
        protected void CameraUpdateHandler(FollowUser group) {
            var handler = CameraUpdateHandlerInstance;
            handler.System = this;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void CameraUpdateFilter() {
            var FollowUserItems = FollowUserManager.Components;
            for (var FollowUserIndex = 0
            ; FollowUserIndex < FollowUserItems.Count; FollowUserIndex++
            ) {
                this.CameraUpdateHandler(FollowUserItems[FollowUserIndex]);
            }
        }
        
        public virtual void SystemUpdate() {
            CameraUpdateFilter();
        }
        
        protected void CameraLateUpdateHandler(FollowUser group) {
            var handler = CameraLateUpdateHandlerInstance;
            handler.System = this;
            handler.Group = group;
            StartCoroutine(handler.Execute());
        }
        
        protected void CameraLateUpdateFilter() {
            var FollowUserItems = FollowUserManager.Components;
            for (var FollowUserIndex = 0
            ; FollowUserIndex < FollowUserItems.Count; FollowUserIndex++
            ) {
                this.CameraLateUpdateHandler(FollowUserItems[FollowUserIndex]);
            }
        }
        
        public virtual void SystemLateUpdate() {
            CameraLateUpdateFilter();
        }
    }
}

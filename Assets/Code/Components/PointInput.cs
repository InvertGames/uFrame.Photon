// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace DireDungeons {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using uFrame.ECS;
    using UniRx;
    
    
    [uFrame.Attributes.uFrameIdentifier("ea80a30f-1415-4750-ac48-117c1eca65b6")]
    public partial class PointInput : uFrame.ECS.EcsComponent {
        
        private Subject<Vector3> _WorldPositionObservable;
        
        private Subject<Vector2> _ScreenPositionObservable;
        
        [UnityEngine.SerializeField()]
        private Vector3 _WorldPosition;
        
        [UnityEngine.SerializeField()]
        private Vector2 _ScreenPosition;
        
        public int ComponentID {
            get {
                return 4;
            }
        }
        
        public IObservable<Vector3> WorldPositionObservable {
            get {
                if (_WorldPositionObservable == null) {
                    _WorldPositionObservable = new Subject<Vector3>();
                }
                return _WorldPositionObservable;
            }
        }
        
        public IObservable<Vector2> ScreenPositionObservable {
            get {
                if (_ScreenPositionObservable == null) {
                    _ScreenPositionObservable = new Subject<Vector2>();
                }
                return _ScreenPositionObservable;
            }
        }
        
        public Vector3 WorldPosition {
            get {
                return _WorldPosition;
            }
            set {
                _WorldPosition = value;
                if (_WorldPositionObservable != null) {
                    _WorldPositionObservable.OnNext(value);
                }
            }
        }
        
        public Vector2 ScreenPosition {
            get {
                return _ScreenPosition;
            }
            set {
                _ScreenPosition = value;
                if (_ScreenPositionObservable != null) {
                    _ScreenPositionObservable.OnNext(value);
                }
            }
        }
    }
}

// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace DireDungeons {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using uFrame.ECS;
    using UniRx;
    
    
    [uFrame.Attributes.uFrameIdentifier("03cf5079-bcbb-4361-9530-026d7eb7fbf1")]
    public partial class LobbyMenu : uFrame.ECS.EcsComponent {
        
        private Subject<GameObject> _obj_ConnectingObservable;
        
        private Subject<GameObject> _txt_ConnectingObservable;
        
        private Subject<Boolean> _ConnectedObservable;
        
        private Subject<GameObject> _obj_RoomsObservable;
        
        [UnityEngine.SerializeField()]
        private GameObject _obj_Connecting;
        
        [UnityEngine.SerializeField()]
        private GameObject _txt_Connecting;
        
        [UnityEngine.SerializeField()]
        private Boolean _Connected;
        
        [UnityEngine.SerializeField()]
        private GameObject _obj_Rooms;
        
        public int ComponentID {
            get {
                return 1;
            }
        }
        
        public IObservable<GameObject> obj_ConnectingObservable {
            get {
                if (_obj_ConnectingObservable == null) {
                    _obj_ConnectingObservable = new Subject<GameObject>();
                }
                return _obj_ConnectingObservable;
            }
        }
        
        public IObservable<GameObject> txt_ConnectingObservable {
            get {
                if (_txt_ConnectingObservable == null) {
                    _txt_ConnectingObservable = new Subject<GameObject>();
                }
                return _txt_ConnectingObservable;
            }
        }
        
        public IObservable<Boolean> ConnectedObservable {
            get {
                if (_ConnectedObservable == null) {
                    _ConnectedObservable = new Subject<Boolean>();
                }
                return _ConnectedObservable;
            }
        }
        
        public IObservable<GameObject> obj_RoomsObservable {
            get {
                if (_obj_RoomsObservable == null) {
                    _obj_RoomsObservable = new Subject<GameObject>();
                }
                return _obj_RoomsObservable;
            }
        }
        
        public GameObject obj_Connecting {
            get {
                return _obj_Connecting;
            }
            set {
                _obj_Connecting = value;
                if (_obj_ConnectingObservable != null) {
                    _obj_ConnectingObservable.OnNext(value);
                }
            }
        }
        
        public GameObject txt_Connecting {
            get {
                return _txt_Connecting;
            }
            set {
                _txt_Connecting = value;
                if (_txt_ConnectingObservable != null) {
                    _txt_ConnectingObservable.OnNext(value);
                }
            }
        }
        
        public Boolean Connected {
            get {
                return _Connected;
            }
            set {
                _Connected = value;
                if (_ConnectedObservable != null) {
                    _ConnectedObservable.OnNext(value);
                }
            }
        }
        
        public GameObject obj_Rooms {
            get {
                return _obj_Rooms;
            }
            set {
                _obj_Rooms = value;
                if (_obj_RoomsObservable != null) {
                    _obj_RoomsObservable.OnNext(value);
                }
            }
        }
    }
}
